{"version":3,"sources":["detach/ExponentTools.js"],"names":["async","url","headers","options","buildPhaseLogger","logger","withFields","buildPhase","requestOptions","replace","let","response","await","_retryPromise","request","err","error","Error","responseBody","body","info","manifest","JSON","parse","e","getManifestAsync","fn","retries","args","length","spawnAsyncQuiet","stdio","cwd","process","pipeToLogger","promise","child","streamsKeys","_","isObject","keys","pickBy","identity","streamsToLogs","pick","pipeOutputToLogger","loggerFields","spawnAsyncThrowError","message","spawnAsync","filename","transform","fileString","fs","readFile","newFileString","writeFile","transformFileContentsAsync","inMemoryManifest","locales","undefined","lang","path","Object","entries","s","ErrorCode","INVALID_JSON","stringify","getResolvedLocalesAsync","regex","file","toString","regexFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","match","push","join","deleteLinesInFileAsync","Request","defaults","resolveWithFullResponse","_getFilesizeInBytes","stats","statSync","fileSizeInBytes","parseSdkMajorVersion","expSdkVersion","Infinity","sdkMajorVersion","versionComponents","map","number","parseInt","saveUrlToPathAsync","Promise","resolve","reject","stream","createWriteStream","on","pipeRequest","pipe","saveImageToPathAsync","projectRoot","pathOrURL","outPath","localPath","existsSync","createReadStream","createSpawner","command","lastArg","last","optionsFromArg","pop","manifestUsesSplashApi","platform","splash","ios","android","rimrafDontThrow","directory","rimraf","sync","warn","isDirectory","dir"],"mappings":"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","file":"../../detach/ExponentTools.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport Request from 'request-promise-native';\n// `request-promise-native` discourages using pipe. Noticed some issues with\n// error handling so when using pipe use the original request lib instead.\nimport pipeRequest from 'request';\nimport rimraf from 'rimraf';\nimport spawnAsyncQuiet from '@expo/spawn-async';\nimport _ from 'lodash';\n\nimport logger, { pipeOutputToLogger } from './Logger';\nimport XDLError from '../XDLError';\nimport ErrorCode from '../ErrorCode';\n\nconst request = Request.defaults({\n  resolveWithFullResponse: true,\n});\n\nfunction _getFilesizeInBytes(path) {\n  let stats = fs.statSync(path);\n  let fileSizeInBytes = stats['size'];\n  return fileSizeInBytes;\n}\n\nfunction parseSdkMajorVersion(expSdkVersion) {\n  // We assume that the unversioned SDK is the latest\n  if (expSdkVersion === 'UNVERSIONED') {\n    return Infinity;\n  }\n\n  let sdkMajorVersion = 0;\n  try {\n    let versionComponents = expSdkVersion.split('.').map(number => parseInt(number, 10));\n    sdkMajorVersion = versionComponents[0];\n  } catch (_) {}\n  return sdkMajorVersion;\n}\n\nfunction saveUrlToPathAsync(url, path) {\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(path);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(path) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    pipeRequest(url).pipe(stream);\n  });\n}\n\nfunction saveImageToPathAsync(projectRoot, pathOrURL, outPath) {\n  const localPath = path.resolve(projectRoot, pathOrURL);\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(outPath);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(outPath) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    if (fs.existsSync(localPath)) {\n      fs.createReadStream(localPath).pipe(stream);\n    } else {\n      pipeRequest(pathOrURL).pipe(stream);\n    }\n  });\n}\n\nasync function getManifestAsync(url, headers, options = {}) {\n  const buildPhaseLogger = options.logger || logger.withFields({ buildPhase: 'reading manifest' });\n  const requestOptions = {\n    url: url.replace('exp://', 'http://'),\n    headers,\n  };\n\n  let response;\n  try {\n    response = await _retryPromise(() => request(requestOptions));\n  } catch (err) {\n    buildPhaseLogger.error(err);\n    throw new Error('Failed to fetch manifest from www');\n  }\n  const responseBody = response.body;\n  buildPhaseLogger.info('Using manifest:', responseBody);\n  let manifest;\n  try {\n    manifest = JSON.parse(responseBody);\n  } catch (e) {\n    throw new Error(`Unable to parse manifest: ${e}`);\n  }\n\n  return manifest;\n}\n\nasync function _retryPromise(fn, retries = 5) {\n  try {\n    return await fn();\n  } catch (err) {\n    if (retries-- > 0) {\n      return await _retryPromise(fn, retries);\n    } else {\n      throw err;\n    }\n  }\n}\n\nasync function spawnAsyncThrowError(...args) {\n  if (args.length === 2) {\n    return spawnAsyncQuiet(args[0], args[1], {\n      stdio: 'inherit',\n      cwd: process.cwd(),\n    });\n  } else {\n    const options = args[2];\n    const { pipeToLogger } = options;\n    if (pipeToLogger) {\n      options.stdio = 'pipe';\n      options.cwd = options.cwd || process.cwd();\n    }\n    const promise = spawnAsyncQuiet(...args);\n    if (pipeToLogger && promise.child) {\n      const streamsKeys = _.isObject(pipeToLogger)\n        ? _.keys(_.pickBy(pipeToLogger, _.identity))\n        : ['stdout', 'stderr'];\n      const streamsToLogs = _.pick(promise.child, streamsKeys);\n      pipeOutputToLogger(streamsToLogs, options.loggerFields, options);\n    }\n    return promise;\n  }\n}\n\nasync function spawnAsync(...args) {\n  try {\n    return await spawnAsyncThrowError(...args);\n  } catch (e) {\n    logger.error(e.message);\n  }\n}\n\nfunction createSpawner(buildPhase, logger) {\n  return (command, ...args) => {\n    const lastArg = _.last(args);\n    const optionsFromArg = _.isObject(lastArg) ? args.pop() : {};\n\n    const options = { ...optionsFromArg, pipeToLogger: true };\n    if (buildPhase) {\n      options.loggerFields = options.loggerFields ? options.loggerFields : {};\n      options.loggerFields = { ...options.loggerFields, buildPhase };\n    }\n\n    if (logger) {\n      logger.info('Executing command:', command, ...args);\n    }\n    return spawnAsyncThrowError(command, args, options);\n  };\n}\n\nasync function transformFileContentsAsync(filename, transform) {\n  let fileString = await fs.readFile(filename, 'utf8');\n  let newFileString = transform(fileString);\n  if (newFileString !== null) {\n    await fs.writeFile(filename, newFileString);\n  }\n}\n\nfunction manifestUsesSplashApi(manifest, platform) {\n  if (platform === 'ios') {\n    return manifest.splash || (manifest.ios && manifest.ios.splash);\n  }\n  if (platform === 'android') {\n    return manifest.splash || (manifest.android && manifest.android.splash);\n  }\n  return false;\n}\n\nfunction rimrafDontThrow(directory) {\n  try {\n    rimraf.sync(directory);\n  } catch (e) {\n    logger.warn(\n      `There was an issue cleaning up, but your project should still work. You may need to manually remove ${directory}. (${e})`\n    );\n  }\n}\n\nfunction isDirectory(dir) {\n  try {\n    if (fs.statSync(dir).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function getResolvedLocalesAsync(inMemoryManifest) {\n  const locales = {};\n  if (inMemoryManifest.locales !== undefined) {\n    for (const [lang, path] of Object.entries(inMemoryManifest.locales)) {\n      const s = await fs.readFile(path, 'utf8');\n      try {\n        locales[lang] = JSON.parse(s);\n      } catch (e) {\n        throw new XDLError(ErrorCode.INVALID_JSON, JSON.stringify(e));\n      }\n    }\n  }\n  return locales;\n}\n\nasync function regexFileAsync(regex, replace, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(startRegex, endRegex, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nexport {\n  isDirectory,\n  parseSdkMajorVersion,\n  saveUrlToPathAsync,\n  saveImageToPathAsync,\n  getManifestAsync,\n  rimrafDontThrow,\n  spawnAsyncThrowError,\n  spawnAsync,\n  transformFileContentsAsync,\n  manifestUsesSplashApi,\n  getResolvedLocalesAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  createSpawner,\n};\n"],"sourceRoot":"/xdl@53.7.2/src"}